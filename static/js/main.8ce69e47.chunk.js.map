{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/components.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","Date","toDateString","url","fetchdata","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportdate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountriesApi","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetcheddata","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ce69e47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__9VijV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__RKH86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1rj1H\"};","module.exports = __webpack_public_path__ + \"static/media/components.83dc46cb.png\";","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nconst Cards = ({ data: {confirmed,recovered,deaths,lastUpdate } } ) => {\r\n    // console.log(props);\r\n    if(!confirmed){\r\n        return \"loading..\"\r\n    }\r\n    return(\r\n        <di className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={ cx(styles.card , styles.infected) }>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                              start={0}\r\n                              end={confirmed.value}\r\n                              separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card}xs={12} md={3} className={ cx(styles.card , styles.recovered) }>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                              start={0}\r\n                              end={recovered.value}\r\n                              separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recovered of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card}xs={12} md={3} className={ cx(styles.card , styles.deaths) }>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                              start={0}\r\n                              end={deaths.value}\r\n                              separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Death cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </di>\r\n    )\r\n\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n const url = \"https://covid19.mathdro.id/api\";\r\n export const fetchdata = async (country) =>{\r\n     let changeableUrl=url;\r\n     if(country){\r\n         changeableUrl = `${url}/countries/${country}`;\r\n     }\r\n     try {\r\n         const { data:{ confirmed,recovered,deaths,lastUpdate} } =  await axios.get(changeableUrl);\r\n\r\n         const modifiedData= {confirmed,recovered,deaths,lastUpdate}\r\n         \r\n         return modifiedData;\r\n         \r\n     } catch (error) {\r\n         \r\n     }\r\n }\r\n\r\n export const fetchDailyData = async () =>{\r\n     try {\r\n         \r\n        const {data} = await axios.get(`${url}/daily`);\r\n        // console.log(data);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportdate,\r\n        }))\r\n        return modifiedData;\r\n\r\n     } catch (error) {\r\n         console.log('error')\r\n         \r\n     }\r\n }\r\n  \r\n export const fetchCountries = async () =>{\r\n     try {\r\n         const {data:{countries}} = await axios.get(`${url}/countries`);\r\n         return countries.map((country)=>country.name);\r\n     } catch (error) {\r\n         \r\n     }\r\n }\r\n","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) => {\r\n\r\nconst [dailyData,setDailyData]= useState([]);\r\n\r\nuseEffect(()=>{\r\n    const fetchAPI = async () => {\r\n        setDailyData( await fetchDailyData());\r\n    }\r\n    // console.log(dailyData);\r\n    fetchAPI();\r\n    \r\n\r\n},[]);\r\n\r\n\r\nconst lineChart = (\r\n    dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\nconst barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n         {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Chart;","import React from 'react';\r\nimport {useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\nconst [fetchedCountries , setFetchedCountries]=useState([]);\r\n\r\n   useEffect (() =>{\r\n       const fetchCountriesApi = async () =>{\r\n           setFetchedCountries (await fetchCountries());\r\n\r\n       }\r\n       fetchCountriesApi();\r\n   },[setFetchedCountries]);\r\n//    console.log(fetchedCountries);\r\n\r\n    return(\r\n      \r\n      <FormControl className={styles.formControl}>  \r\n          <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>  \r\n            <option value=''>Global</option>\r\n              {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n          </NativeSelect>\r\n      </FormControl>\r\n    )\r\n\r\n}\r\nexport default CountryPicker;","import React from 'react';\nimport {Cards, Chart ,CountryPicker} from './components';\nimport styles from'./App.module.css';\n\nimport {fetchdata} from './api/index.js';\nimport image from'./images/components.png';\n\n\nclass App extends React.Component {\n  state={\n    data:{},\n    country:'',\n  }\n  async componentDidMount(){\n    const fetcheddata = await fetchdata();\n     this.setState({data:fetcheddata});\n  }\n  handleCountryChange = async (country)=>{\n    // console.log(country);\n    //fetch data\n    //set state\n    const fetcheddata = await fetchdata(country);\n    // console.log(fetcheddata);\n    this.setState({data:fetcheddata, country:country});\n  }\n  render(){\n    const {data,country}=this.state\n  return (\n   \n    <div className={styles.container}>\n      <h1>Covid-19 live</h1>\n      {/* <img src={image} className=\"styles.image\" alt=\"Covid-19\" /> */}\n      <CountryPicker handleCountryChange={this.handleCountryChange}/>\n      <Cards data= {data} />\n      \n      <Chart data={data} country={country}/>\n      \n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App /> ,document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__I44dH\",\"card\":\"Cards_card__17OKh\",\"infected\":\"Cards_infected__2lNFA\",\"recovered\":\"Cards_recovered__2n-0c\",\"deaths\":\"Cards_deaths__1xvrx\"};"],"sourceRoot":""}